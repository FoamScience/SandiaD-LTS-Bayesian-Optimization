#!/bin/sh
cd "${0%/*}" || exit                                # Run from this directory
. ${WM_PROJECT_DIR:?}/bin/tools/RunFunctions        # Tutorial run functions
#------------------------------------------------------------------------------

export AMRLB_PROJECT=$HOME/repos/blastAMR
export FOAM_CODE_TEMPLATES=$AMRLB_PROJECT/etc/codeTemplates/dynamicCode
set -e

restore0Dir

runApplication chemkinToFoam \
    chemkin/mechanismProperties chemkin/thermo30.dat chemkin/transportProperties \
    constant/reactionsGRI constant/thermo.compressibleGasGRI

runApplication blockMesh

# Run without chemistry until 1500 to let the flow field develop
runApplication setFields
#refineInterval=$(foamDictionary -entry refineInterval -value constant/dynamicMeshDict )
#foamDictionary -entry refineInterval -set 1 constant/dynamicMeshDict
#maxRef=$(foamDictionary -entry maxRefinement -value constant/dynamicMeshDict)
#for i in $(seq 1 "$maxRef"); do
#    runApplication -a updateMesh -overwrite
#    runApplication -a setFields
#done
foamDictionary system/controlDict -entry writeInterval -set 1500
foamDictionary system/controlDict -entry endTime -set 1500
foamDictionary constant/chemistryProperties -entry chemistry -set off
#foamDictionary -entry refineInterval -set "$refineInterval" constant/dynamicMeshDict
runApplication decomposePar
set +e
runParallel $(getApplication)
if [ $? -ne 0 ]; then
    echo "Solver $(getApplication) failed, objectives will be penalized for this trial"
    touch FAILED
    exit 0
fi
set -e

# Run with chemistry until flame reaches its full size
foamDictionary system/controlDict -entry writeInterval -set 100
foamDictionary system/controlDict -entry endTime -set 5000
foamDictionary constant/chemistryProperties -entry chemistry -set on
set +e
runParallel -a $(getApplication)
if [ $? -ne 0 ]; then
    echo "Solver $(getApplication) failed, objectives will be penalized for this trial"
    touch FAILED
    exit 0
fi
set -e

#------------------------------------------------------------------------------
